/*
 * Copyright (c) 2010. Alexander Pupeikis
 *
 * This file is part of JavaPixelazier.
 *
 * JavaPixelazier is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * JavaPixelazier is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with JavaPixelazier.  If not, see http://www.gnu.org/licenses/.
 */

package com.apleben.graphics.SteelSeriesSet;

import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;

import javax.swing.*;
import java.awt.*;

/**
 * @author apupeikis
 */
public class ControlsPanel {
    private JPanel controls;
    private JComboBox frameDesign;
    private JLabel frameDesLable;
    private JComboBox backgroundColor;
    private JLabel bgColorLabel;
    private JComboBox pointerColor;
    private JLabel ptColorLabel;
    private JComboBox lcdColor;
    private JLabel lcdColorLable;
    private JCheckBox thresholdCB;
    private JCheckBox maxMeasuredCB;
    private JCheckBox sectionCB;
    private JCheckBox trackSectionCB;
    private JComboBox tickmarkColor;
    private JCheckBox animateCB;
    private JSlider pointerSlider;
    private JLabel tickmarkColorL;
    private JLabel dragLabel;

    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                JFrame frame = new JFrame("ControlsPanel");
                frame.setContentPane(new ControlsPanel().controls);
                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                frame.pack();
                frame.setVisible(true);
            }
        });
    }

    private void createUIComponents() {

    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        controls = new JPanel();
        controls.setLayout(new FormLayout("fill:129px:noGrow,left:4dlu:noGrow,fill:126px:noGrow,left:4dlu:noGrow,fill:135px:noGrow", "center:d:noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow"));
        controls.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), "Controls"));
        frameDesLable = new JLabel();
        frameDesLable.setHorizontalAlignment(4);
        frameDesLable.setHorizontalTextPosition(11);
        frameDesLable.setText("Frame\nDesign");
        CellConstraints cc = new CellConstraints();
        controls.add(frameDesLable, new CellConstraints(1, 1, 1, 1, CellConstraints.DEFAULT, CellConstraints.DEFAULT, new Insets(0, 0, 0, 5)));
        backgroundColor = new JComboBox();
        controls.add(backgroundColor, cc.xy(3, 3));
        bgColorLabel = new JLabel();
        bgColorLabel.setHorizontalAlignment(4);
        bgColorLabel.setText("Background\nColor");
        controls.add(bgColorLabel, new CellConstraints(1, 3, 1, 1, CellConstraints.DEFAULT, CellConstraints.DEFAULT, new Insets(0, 0, 0, 5)));
        ptColorLabel = new JLabel();
        ptColorLabel.setHorizontalAlignment(4);
        ptColorLabel.setText("Pointer\nColor");
        controls.add(ptColorLabel, new CellConstraints(1, 5, 1, 1, CellConstraints.DEFAULT, CellConstraints.DEFAULT, new Insets(0, 0, 0, 5)));
        pointerColor = new JComboBox();
        controls.add(pointerColor, cc.xy(3, 5));
        lcdColorLable = new JLabel();
        lcdColorLable.setHorizontalAlignment(4);
        lcdColorLable.setText("LCD Color");
        controls.add(lcdColorLable, new CellConstraints(1, 7, 1, 1, CellConstraints.DEFAULT, CellConstraints.DEFAULT, new Insets(0, 0, 0, 5)));
        lcdColor = new JComboBox();
        controls.add(lcdColor, cc.xy(3, 7));
        thresholdCB = new JCheckBox();
        thresholdCB.setHorizontalAlignment(4);
        thresholdCB.setHorizontalTextPosition(2);
        thresholdCB.setText("Threshold");
        controls.add(thresholdCB, cc.xy(5, 1));
        maxMeasuredCB = new JCheckBox();
        maxMeasuredCB.setHorizontalAlignment(4);
        maxMeasuredCB.setHorizontalTextPosition(2);
        maxMeasuredCB.setText("Max. measured");
        controls.add(maxMeasuredCB, cc.xy(5, 3));
        sectionCB = new JCheckBox();
        sectionCB.setHorizontalAlignment(4);
        sectionCB.setHorizontalTextPosition(2);
        sectionCB.setText("Section");
        controls.add(sectionCB, cc.xy(5, 5));
        trackSectionCB = new JCheckBox();
        trackSectionCB.setHorizontalAlignment(4);
        trackSectionCB.setHorizontalTextPosition(2);
        trackSectionCB.setText("Track Section");
        controls.add(trackSectionCB, cc.xy(5, 7));
        tickmarkColorL = new JLabel();
        tickmarkColorL.setHorizontalAlignment(4);
        tickmarkColorL.setText("Tickmark Color");
        controls.add(tickmarkColorL, new CellConstraints(1, 9, 1, 1, CellConstraints.DEFAULT, CellConstraints.DEFAULT, new Insets(0, 0, 0, 5)));
        tickmarkColor = new JComboBox();
        controls.add(tickmarkColor, cc.xy(3, 9));
        animateCB = new JCheckBox();
        animateCB.setHorizontalAlignment(4);
        animateCB.setHorizontalTextPosition(2);
        animateCB.setText("Animate");
        controls.add(animateCB, cc.xy(5, 9));
        dragLabel = new JLabel();
        dragLabel.setHorizontalAlignment(4);
        dragLabel.setText("Drag it!");
        controls.add(dragLabel, new CellConstraints(1, 11, 1, 1, CellConstraints.DEFAULT, CellConstraints.DEFAULT, new Insets(0, 0, 0, 5)));
        pointerSlider = new JSlider();
        pointerSlider.setPaintLabels(true);
        pointerSlider.setPaintTicks(true);
        controls.add(pointerSlider, cc.xyw(3, 11, 3, CellConstraints.FILL, CellConstraints.DEFAULT));
        frameDesign = new JComboBox();
        controls.add(frameDesign, cc.xy(3, 1));
        frameDesLable.setLabelFor(frameDesign);
        bgColorLabel.setLabelFor(backgroundColor);
        ptColorLabel.setLabelFor(pointerColor);
        lcdColorLable.setLabelFor(lcdColor);
        tickmarkColorL.setLabelFor(tickmarkColor);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return controls;
    }
}
